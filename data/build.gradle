plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'kotlinx-serialization'
}

apply from: '../shared-dependencies.gradle'

android {

    def REDDIT_BASE_URL = "REDDIT_BASE_URL"
    def REDDIT_BASE_URL_OAUTH = "REDDIT_BASE_URL_OAUTH"
    def REDDIT_CLIENT_ID = "REDDIT_CLIENT_ID"
    def REDDIT_REDIRECT_URI = "REDDIT_REDIRECT_URI"
    def REDDIT_LOGIN_SCOPES = "REDDIT_LOGIN_SCOPES"

    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", REDDIT_BASE_URL, "\"https://www.reddit.com/\""
            buildConfigField "String", REDDIT_BASE_URL_OAUTH, "\"https://oauth.reddit.com/\""
            buildConfigField "String", REDDIT_CLIENT_ID, REDDIT_CLIENT_ID_SECRET
            buildConfigField "String", REDDIT_REDIRECT_URI, "\"kreddit://authenticate\""
            buildConfigField "String", REDDIT_LOGIN_SCOPES, "\"identity mysubreddits read vote\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", REDDIT_BASE_URL, "\"https://www.reddit.com/\""
            buildConfigField "String", REDDIT_BASE_URL_OAUTH, "\"https://oauth.reddit.com/\""
            buildConfigField "String", REDDIT_CLIENT_ID, REDDIT_CLIENT_ID_SECRET
            buildConfigField "String", REDDIT_REDIRECT_URI, "\"kreddit://authenticate\""
            buildConfigField "String", REDDIT_LOGIN_SCOPES, "\"identity mysubreddits read vote\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    kapt {
        correctErrorTypes = true
        generateStubs = true
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
                details.useVersion kotlin_version
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'

    //Paging library
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


    testImplementation 'junit:junit:4.13.1'
    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okHttp}"
    def mockito_version = "3.4.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    def hamcrest_verison = "2.2"
    testImplementation "org.hamcrest:hamcrest:$hamcrest_verison"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_verison"
    kaptTest "com.google.dagger:dagger-compiler:${versions.dagger2}"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}